# The test environment and commands
[tox]
envlist = check, docs, test
skipsdist = True

[testenv:check]
description = Runs all formatting tools then static analysis (quick)
deps =
    --requirement deps/check.txt
commands =
    shed
    flake8
    mypy --config-file=tox.ini src/hypofuzz/

[testenv:docs]
description = Builds docs with sphinx
deps =
    --requirement deps/docs.txt
commands =
    pip install --no-deps --editable .
    sphinx-build -W --keep-going docs-src docs/docs {posargs}

[testenv:test]
description = Runs pytest with posargs - `tox -e test -- -v` == `pytest -v`
deps =
    --requirement deps/test.txt
commands =
    pip install --no-deps --editable .
    pytest {posargs:-n auto}

[testenv:hypofuzz]
description = Runs hypofuzz with posargs - `tox -e test -- -n 4` == `hypothesis fuzz -n 4`
deps =
    --requirement deps/test.txt
allowlist_externals = timeout
commands =
    pip install --no-deps --editable .
    timeout 20 hypothesis fuzz {posargs:--no-dashboard}


[testenv:deps]
description = Updates test corpora and the pinned dependencies in `deps/*.txt`
deps =
    pip-tools
commands =
    pip-compile --annotation-style=line --quiet --upgrade --rebuild --output-file=deps/check.txt deps/check.in
    pip-compile --annotation-style=line --quiet --upgrade --rebuild --output-file=deps/docs.txt deps/docs.in setup.py
    pip-compile --annotation-style=line --quiet --upgrade --rebuild --output-file=deps/test.txt deps/test.in setup.py


# Settings for other tools
[pytest]
xfail_strict = True
addopts =
    -Werror
    --tb=short
    # --cov=hypofuzz
    # --cov-branch
    # --cov-report=term-missing:skip-covered
    # --cov-fail-under=100

[flake8]
ignore = D1,E203,E501,W503,S101,S310,S311,B008
exclude = .*/,__pycache__

[mypy]
python_version = 3.6
platform = linux
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_untyped_decorators = True
follow_imports = silent
ignore_missing_imports = True
implicit_reexport = False
warn_no_return = True
warn_return_any = True
warn_unreachable = True
warn_unused_ignores = True
warn_unused_configs = True
warn_redundant_casts = True

[coverage:report]
exclude_lines =
    pragma: no cover
    raise NotImplementedError
